<?xml version="1.0" encoding="UTF-8"?>
<Scene base_name="lightsaber" name_space="Scene" name_suffix="0" persistency="666">
  <Objects>
    <Object base_name="Root" name_space="__global__" name_suffix="0" persistency="666" pickable="0" type="Object" visible="4294967295">
      <Object ambient="0.3 0.3 0.3 1" base_name="light" beacon="Headlight_beacon" diffuse="1 1 1 1" lightType="point" name_space="__global__" name_suffix="0" on="1" persistency="666" photometricMap="" pickable="0" shadow="0" shadowColor="0.1 0.1 0.1 1" shadowMapRes="2048" shadowVolume="1e+06 1e+06 1e+06 -1e+06 -1e+06 -1e+06 1" specular="0.1 0.1 0.1 1" type="Light" visible="4294967295">
        <Object accept_root="1" aspect="1" at="0.0426602 -0.112691 0.0643635" at_dir="0" base_name="Default" far="512" fov="1.0472" from="-0.0106827 -0.3761 0.171247" name_space="__global__" name_suffix="0" near="0.1" orthoSize="100" persistency="666" pickable="0" scale="1 1 1" type="Camera" up="0 1 0" visible="4294967295">
          <Object at="0 0 -1" at_dir="0" base_name="Headlight_beacon" from="0 0 0" light="light" name_space="__global__" name_suffix="0" persistency="666" pickable="0" scale="1 1 1" type="LightBeacon" up="0 1 0" visible="4294967295">
            <constraint persistency="666"/>
          </Object>
          <constraint persistency="666"/>
        </Object>
      </Object>
    </Object>
  </Objects>
  <Cameras activeCam="Default" persistency="666"/>
  <Rendering deferred_rendering="0" fogColor="0.5 0.5 0.5 1" fogParams="0 0 100 0.1" frustum_culling="1" fxaa="0" hmdd="0" marker="0" occlusion_culling="0" persistency="666" ssao="0" ssao_kernel="4" ssao_noise="4" ssao_radius="0.02" two_sided="1"/>
  <Scripts persistency="666">
    <Script base_name="anim" group="no group" name_space="__script__" name_suffix="0" persistency="666" server="server1" type="Python">
      <core>
	import VR
	
	if not hasattr(VR, 'drawn'): VR.drawn = True

	def c(t):
		u = t
		if VR.drawn: u = 1.0-t
	
		s = u
		y = u*0.5+0.125
		
		VR.edge.setScale([1,s,1])
		VR.edge.setFrom([0,y,0])
		for g in VR.glow:
			g.setScale([1,s,1])
			g.setFrom([0,y,0])
			
		v = bool(u &gt; 1e-2)
		VR.edge.setVisible(v)
		for g in VR.glow: g.setVisible(v)
			
		if t == 1: 
			VR.drawn = not VR.drawn
			print 'toggle', VR.drawn
		

	a = VR.Animation('sword')
	a.setCallback(c)
	a.setDuration(0.3)
	a.start()
</core>
      <trig type="on_device" dev="keyboard" state="Pressed" param="" key="32" base_name="trigger" name_space="__global__" name_suffix="1" persistency="666"/>
    </Script>
    <Script base_name="glowFP" group="no group" name_space="__script__" name_suffix="0" persistency="666" server="server1" type="GLSL">
      <core>
varying vec4 vertPos;
varying vec3 vertNorm;

uniform int H;
uniform int R;
uniform int I;
uniform int K;

void main() {
	float r = float(R)*0.01;

	vec3 P  = vec3(gl_ModelViewMatrix * vertPos);
	vec3 P0 = vec3(gl_ModelViewMatrix * vec4((vertPos.xyz - vertNorm.xyz*r),1));
	float N = dot(normalize(P-P0),normalize(P));
	if (N &lt; 0.0) discard;

	vec4 color = gl_FrontMaterial.diffuse;

	float h = 0.005*float(H);
	vec3 P1 = vec3(gl_ModelViewMatrix * vec4(0,-h,0,1));
	vec3 P2 = vec3(gl_ModelViewMatrix * vec4(0, h,0,1));
	
	vec3 R1d = normalize(P);
	vec3 R2d = normalize(P1);
	vec3 R3d = normalize(P2);
	
	float L = length(R3d - R2d);
	vec3 D = normalize(R3d - R2d);
	vec3 X = normalize(cross(R2d, R3d));
	
	vec3 A = R3d-R1d;
	A = A - X*dot(A,X);
	vec3 S = normalize(R3d-A); // S is closest point on segment
	float t = dot(S, D)/L;
	if (t &gt; 0.5) S = R3d;
	if (t &lt; -0.5) S = R2d;
	
	float a = (1.0-acos(dot(R1d, S))*float(K))*float(I);
	color.a *= a;
	&#13;
	gl_FragColor = color;
}
</core>
    </Script>
    <Script base_name="glowVP" group="no group" name_space="__script__" name_suffix="0" persistency="666" server="server1" type="GLSL">
      <core>
#version 120
attribute vec4 osg_Vertex;
attribute vec3 osg_Normal;
varying vec4 vertPos;
varying vec3 vertNorm;

void main(void) {
	vertPos = osg_Vertex;
	vertNorm = osg_Normal;
	gl_Position = gl_ModelViewProjectionMatrix*osg_Vertex;
}
</core>
    </Script>
    <Script base_name="init" group="no group" name_space="__script__" name_suffix="0" persistency="666" server="server1" type="Python">
      <core>
	import VR

	if hasattr(VR, 'scene'): VR.scene.destroy()
	VR.scene = VR.Object('scene', 'light')

	def createPart(params, pos):
		p = VR.Geometry('part')
		p.setPrimitive(params)
		p.setFrom(pos)
		return p

	def createHandle():
		h = createPart('Cylinder 0.25 0.02 32 1 1 1', [0,0,0])
		b0 = createPart('Cylinder 0.01 0.03 32 1 1 1', [0,0.11,0])
		b1 = createPart('Cylinder 0.05 0.03 32 1 1 1', [0,0.05,0])
		b2 = createPart('Cylinder 0.11 0.025 32 1 1 1', [0,-0.04,0])
		b3 = createPart('Cylinder 0.01 0.03 32 1 1 1', [0,-0.11,0])
		h.merge(b0, b0.getPose())
		h.merge(b1, b1.getPose())
		h.merge(b2, b2.getPose())
		h.merge(b3, b3.getPose())
		h.setPickable(True)
		m = VR.Material('mat')
		m.setDiffuse([0.7,0.7,0.7])
		h.setMaterial(m)
		VR.scene.addChild(h)
		return h
		
	def createEdge(handle):
		e = createPart('Pill 1.0 0.018 32 1 1 1', [0,0.5+0.125,0])
		m = VR.Material('mat')
		m.setLit(0)
		m.setDiffuse([1,1,1])
		#m.enableTransparency()
		#m.setSortKey(1)
		#m.setZOffset(0,-100000)
		e.setMaterial(m)
		handle.addChild(e)
		return e
		
	def createGlowMat(H,R,I,K):
		m = VR.Material('mat')
		m.setDiffuse([0.5,0.7,1])
		if 1:
			m.setLit(0)
			m.setTransparency(0.3)
			m.setVertexProgram('glowVP')
			m.setFragmentProgram('glowFP')
			m.setShaderParameter('H', H)
			m.setShaderParameter('R', R)
			m.setShaderParameter('I', I)
			m.setShaderParameter('K', K)
		return m
		
	def createGlow(handle):
		g1 = createPart('Pill 1.00 0.05 32 1 1 1', [0,0.5+0.125,0])
		g2 = createPart('Pill 1.00 0.25 32 1 1 1', [0,0.5+0.125,0])
		g1.setMaterial(createGlowMat(100,5,20,50))
		g2.setMaterial(createGlowMat(100,25,2,10))
		handle.addChild(g1)
		handle.addChild(g2)
		return (g1,g2)
		
	handle = createHandle()
	VR.edge = createEdge(handle)
	VR.glow = createGlow(handle)
</core>
      <trig type="on_scene_load" dev="" state="Pressed" param="" key="0" base_name="trigger" name_space="__global__" name_suffix="0" persistency="666"/>
    </Script>
  </Scripts>
  <Sockets persistency="666"/>
  <Background color="0.6 0.6 0.6" format=".png" path="" persistency="666" type="0"/>
  <Navigation active="Orbit" persistency="666"/>
  <Materials persistency="666"/>
  <Semantics persistency="666"/>
</Scene>
