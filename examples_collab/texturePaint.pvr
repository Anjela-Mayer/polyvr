<?xml version="1.0" encoding="UTF-8"?>
<Scene base_name="texturePaint" name_space="Scene" name_suffix="0" persistency="666">
  <Objects>
    <Object base_name="Root" name_space="__global__" name_suffix="0" persistency="666" pickable="0" type="Object" visible="1">
      <Object ambient="0.3 0.3 0.3 1" base_name="light" beacon="Headlight_beacon" diffuse="1 1 1 1" lightType="point" name_space="__global__" name_suffix="0" on="1" persistency="666" photometricMap="" pickable="0" shadow="0" shadowColor="0.1 0.1 0.1 1" shadowMapRes="2048" specular="0.1 0.1 0.1 1" type="Light" visible="1">
        <Object accept_root="1" aspect="1" at="0 0 3.45" at_dir="0" base_name="Default" far="512" fov="1.0472" from="0 0 4.45" name_space="__global__" name_suffix="0" near="0.1" orthoSize="100" persistency="666" pickable="0" scale="1 1 1" type="Camera" up="0 1 0" visible="1">
          <Object at="0 0 -1" at_dir="0" base_name="Headlight_beacon" from="0 0 0" light="light" name_space="__global__" name_suffix="0" persistency="666" pickable="0" scale="1 1 1" type="LightBeacon" up="0 1 0" visible="1">
            <constraint persistency="666"/>
          </Object>
          <constraint persistency="666"/>
        </Object>
      </Object>
    </Object>
  </Objects>
  <Rendering deferred_rendering="0" frustum_culling="1" fxaa="0" hmdd="0" marker="0" occlusion_culling="0" persistency="666" ssao="0" ssao_kernel="4" ssao_noise="4" ssao_radius="0.02" two_sided="1"/>
  <Scripts persistency="666">
    <Script base_name="clearCanvas" group="no group" name_space="__script__" name_suffix="0" persistency="666" server="server1" type="Python">
      <core>
	import VR
	
	VR.texGenerator = VR.TextureGenerator()
	VR.texGenerator.setSize([512, 512, 1], False)
	tex = VR.texGenerator.compose(0)
	VR.canvas.getMaterial().setTexture(tex)
	
</core>
    </Script>
    <Script base_name="computeStroke" group="no group" name_space="__script__" name_suffix="0" persistency="666" server="server1" type="Python">
      <core>
	import VR
	from VR.Math import Vec3
	
	if not hasattr(VR, 'lastPath'): VR.lastPath = None
	
	d2 = Vec3(p2) - p1
	d2.normalize()
	
	if doAppend and VR.lastPath: d1 = VR.lastPath.getPose(1).dir()
	else: d1 = d2
	
	path = VR.Path()
	path.addPoint(p1, d1, [0,0,0], [0,0,1])
	path.addPoint(p2, d2, [0,0,0], [0,0,1])
	path.compute(6)
	VR.lastPath = path
	return path
</core>
      <arg type="NoneType" value="None" base_name="p1" name_space="computeStroke" name_suffix="0" persistency="666"/>
      <arg type="NoneType" value="None" base_name="p2" name_space="computeStroke" name_suffix="0" persistency="666"/>
      <arg type="NoneType" value="None" base_name="doAppend" name_space="computeStroke" name_suffix="0" persistency="666"/>
    </Script>
    <Script base_name="init" group="no group" name_space="__script__" name_suffix="0" persistency="666" server="server1" type="Python">
      <core>
	import VR
	
	# reset scene
	if hasattr(VR, 'scene'): VR.scene.destroy()
	VR.scene = VR.Object('scene', 'light')
	
	# setup canvas geometry
	VR.canvas = VR.Geometry('geo')
	VR.canvas.setPrimitive('Plane 2 2 1 1')
	#VR.canvas.setPrimitive('Sphere 1 2')
	VR.scene.addChild(VR.canvas)
	
	# setup texture generator
	VR.texGenerator = VR.TextureGenerator()
	VR.texGenerator.setSize([512, 512, 1], False)
	
	# draw on canvas (in UV space)
	color = [1,0,1,1]
	
	path = VR.computeStroke([0.2,0.4,0], [0.2,0.2,0], False)	
	VR.updateCanvas(path, color)
	
	path = VR.computeStroke([0.2,0.2,0], [0.8,0.2,0], True)	
	VR.updateCanvas(path, color)
	
	path = VR.computeStroke([0.8,0.2,0], [0.8,0.4,0], True)	
	VR.updateCanvas(path, color)
	
	path = VR.computeStroke([0.3,0.7,0], [0.3,0.6,0], False) # eye	
	VR.updateCanvas(path, color)
	
	path = VR.computeStroke([0.7,0.7,0], [0.7,0.6,0], False) # eye
	VR.updateCanvas(path, color)
</core>
      <trig type="on_scene_load" dev="" state="Pressed" param="" key="0" base_name="trigger" name_space="__global__" name_suffix="0" persistency="666"/>
    </Script>
    <Script base_name="paint" group="no group" name_space="__script__" name_suffix="0" persistency="666" server="server1" type="Python">
      <core>
	import VR
	
	if not hasattr(VR, 'lastUV'): VR.lastUV = None
	
	dev = VR.find('mouse')
	pressed = dev.getKeyState(0)
	if not pressed:
		VR.lastUV = None
		return
	
	color = [0,0,1,1]
	
	
	if dev.intersect(VR.canvas):
		uv1 = VR.lastUV
		uv2 = dev.getIntersectionUV()
		VR.lastUV = uv2
		
		if uv1:
			path = VR.computeStroke([uv1[0], uv1[1], 0], [uv2[0], uv2[1], 0], True)
			VR.updateCanvas(path, color)
</core>
      <trig type="on_timeout" dev="" state="Pressed" param="100" key="0" base_name="trigger" name_space="__global__" name_suffix="1" persistency="666"/>
    </Script>
    <Script base_name="updateCanvas" group="no group" name_space="__script__" name_suffix="0" persistency="666" server="server1" type="Python">
      <core>
	import VR
	
	VR.texGenerator.drawPath(path, color, 0.1)
	tex = VR.texGenerator.compose(0)
	VR.canvas.getMaterial().setTexture(tex)
</core>
      <arg type="NoneType" value="None" base_name="path" name_space="updateCanvas" name_suffix="0" persistency="666"/>
      <arg type="NoneType" value="None" base_name="color" name_space="updateCanvas" name_suffix="0" persistency="666"/>
    </Script>
  </Scripts>
  <Sockets persistency="666"/>
  <Background color="0.6 0.6 0.6" format=".png" path="" persistency="666" type="0"/>
  <Navigation active="Orbit" persistency="666"/>
  <Materials persistency="666"/>
  <Semantics persistency="666"/>
</Scene>
