<?xml version="1.0" encoding="UTF-8"?>
<Scene base_name="Mechanics" name_space="Scene" name_suffix="0" persistency="666">
  <Objects>
    <Object base_name="Root" name_space="__global__" name_suffix="0" persistency="666" pickable="0" type="Object" visible="1">
      <Object ambient="0.3 0.3 0.3 1" base_name="Headlight" beacon="Headlight_beacon" diffuse="1 1 1 1" lightType="point" name_space="__global__" name_suffix="0" on="1" persistency="666" photometricMap="" pickable="0" shadow="0" shadowColor="0.1 0.1 0.1 1" shadowMapRes="2048" specular="0.1 0.1 0.1 1" type="Light" visible="1">
        <Object accept_root="1" aspect="1" at="-0.83076 -0.145735 0.3" at_dir="0" base_name="Default" far="250" fov="1.0472" from="-3.14046 0.146935 1.56317" name_space="__global__" name_suffix="0" near="0.1" orthoSize="100" persistency="666" pickable="0" scale="1 1 1" type="Camera" up="0 1 0" visible="1">
          <Object at="0 0 -1" at_dir="0" base_name="Headlight_beacon" from="0 0 0" light="Headlight" name_space="__global__" name_suffix="0" persistency="666" pickable="0" scale="1 1 1" type="LightBeacon" up="0 1 0" visible="1">
            <constraint persistency="666"/>
          </Object>
          <constraint persistency="666"/>
        </Object>
      </Object>
    </Object>
  </Objects>
  <Rendering deferred_rendering="1" frustum_culling="1" fxaa="0" hmdd="0" marker="0" occlusion_culling="0" persistency="666" ssao="1" ssao_kernel="6" ssao_noise="4" ssao_radius="0.105" two_sided="1"/>
  <Scripts persistency="666">
    <Script base_name="init" group="no group" name_space="__script__" name_suffix="0" persistency="666" server="server1" type="Python">
      <core>
	import VR
	import math
	Pi = math.pi
	
	if hasattr(VR, 'mechanism'):
		VR.mechanism.destroy()
		
	VR.mechanism = VR.Transform('mechanism')
	VR.mechanism.setScale([10,10,10])
	root.addChild(VR.mechanism)
	
	VR.gears = [] # for animation
	
	def addGear(params):
		g = VR.Geometry('gear')
		g.setPrimitive(' '.join([str(i) for i in params]))
		VR.mechanism.addChild(g)
		return g
		
	# parameters
	gP = 0.02 # gear pitch
	gN = 32 # gear teeth number 
	gR = gP*gN*0.5/Pi # gear radius
	gT = 0.02 # gear thickness
	gL = 0.01 # gear teeth length
	aR = 0.01 # axle radius
		
	g1 = addGear(['Gear', gT, aR, gP, int(1.5*gN), gL, 0])
	g2 = addGear(['Gear', gT, aR, gP, int(0.5*gN), gL, 0])
	g3 = addGear(['Gear', gT, aR, gP, int(0.5*gN), gL, -0.7])
	g4 = addGear(['Gear', gT, aR, gP, int(1.0*gN), gL, -0.7])
	
	g1.translate([-gR, 0, 0])
	g2.translate([gR, 0, 0])
	g3.translate([-gR, 0, gT])
	g4.translate([-gR, -0.5*gR, gR+gT])
	g4.rotate(-Pi*0.5, [1,0,0])
	
	VR.gears.append([g1, 1, 1.5*gR])
	VR.gears.append([g2, -1, 0.5*gR])
	VR.gears.append([g3, 1, 1.5*gR])
	VR.gears.append([g4, -1, 3.0*gR])
</core>
      <arg type="VRPyObjectType" value="Headlight" base_name="root" name_space="init" name_suffix="0" persistency="666"/>
      <trig type="on_scene_load" dev="" state="Pressed" param="" key="0" base_name="trigger" name_space="__global__" name_suffix="0" persistency="666"/>
    </Script>
    <Script base_name="rotate" group="no group" name_space="__script__" name_suffix="0" persistency="666" server="server1" type="Python">
      <core>
	import VR
	
	if not hasattr(VR, 'gears'):
		return
	
	for g in VR.gears:
		dr = 0.001/g[2]
		d = g[0].getDir()
		g[0].rotate(g[1]*dr, d)
</core>
      <trig type="on_timeout" dev="" state="Pressed" param="0" key="0" base_name="trigger" name_space="__global__" name_suffix="1" persistency="666"/>
    </Script>
  </Scripts>
  <Sockets persistency="666"/>
  <Background color="0.6 0.6 0.6" format=".png" path="" persistency="666" type="0"/>
  <Navigation active="Orbit" persistency="666"/>
  <Materials persistency="666"/>
  <Semantics persistency="666"/>
</Scene>
