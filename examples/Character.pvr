<?xml version="1.0" encoding="UTF-8"?>
<Scene base_name="Character" name_space="Scene" name_suffix="0" persistency="666">
  <Objects>
    <Object base_name="Root" name_space="__global__" name_suffix="0" persistency="666" pickable="0" type="Object" visible="1">
      <Object ambient="0.3 0.3 0.3 1" base_name="light" beacon="Headlight_beacon" diffuse="1 1 1 1" lightType="point" name_space="__global__" name_suffix="0" on="1" persistency="666" photometricMap="" pickable="0" shadow="0" shadowColor="0.1 0.1 0.1 1" shadowMapRes="2048" shadowVolume="1e+06 1e+06 1e+06 -1e+06 -1e+06 -1e+06 1" specular="0.1 0.1 0.1 1" type="Light" visible="1">
        <Object accept_root="1" aspect="1" at="0 1 0" at_dir="0" base_name="Default" far="512" fov="1.0472" from="0.0215125 1.72115 -1.22856" name_space="__global__" name_suffix="0" near="0.1" orthoSize="100" persistency="666" pickable="0" scale="1 1 1" type="Camera" up="0 1 0" visible="1">
          <Object at="0 0 -1" at_dir="0" base_name="Headlight_beacon" from="0 0 0" light="light" name_space="__global__" name_suffix="0" persistency="666" pickable="0" scale="1 1 1" type="LightBeacon" up="0 1 0" visible="1">
            <constraint persistency="666"/>
          </Object>
          <constraint persistency="666"/>
        </Object>
      </Object>
    </Object>
  </Objects>
  <Cameras activeCam="Default" persistency="666"/>
  <Rendering deferred_rendering="0" fogColor="0.5 0.5 0.5 1" fogParams="0 0 100 0.1" frustum_culling="1" fxaa="0" hmdd="0" marker="0" occlusion_culling="0" persistency="666" ssao="0" ssao_kernel="4" ssao_noise="4" ssao_radius="0.02" two_sided="1"/>
  <Scripts persistency="666">
    <Script base_name="init" group="no group" name_space="__script__" name_suffix="0" persistency="666" server="server1" type="Python">
      <core>
	import VR
	from VR.Math import Vec3
	
	if hasattr(VR, 'character'): VR.character.destroy()
	VR.character = VR.Character('john')
	VR.character.simpleSetup()
	
	VR.find('light').addChild(VR.character)

	def simCb():
		VR.sim()
		
	#VR.character.overrideSim(simCb)
	VR.testMove(None)
</core>
      <trig type="on_scene_load" dev="" state="Pressed" param="" key="0" base_name="trigger" name_space="__global__" name_suffix="0" persistency="666"/>
    </Script>
    <Script base_name="proto" group="no group" name_space="__script__" name_suffix="0" persistency="666" server="server1" type="Python">
      <core>
	import VR
	from VR.Math import Vec3
	
	if hasattr(VR, 'joints'): VR.joints.destroy()
	VR.joints = VR.Geometry('joints', 'light')
	
	m = VR.Material('mat')
	m.setPointSize(15)
	m.setLit(0)
	VR.joints.setMaterial(m)
	
	skeleton = VR.character.getSkeleton()	
	for i,p in skeleton.getJointsPositions().items():
		VR.joints.addVertex(p)
		VR.joints.addPoint()
</core>
    </Script>
    <Script base_name="sim" group="no group" name_space="__script__" name_suffix="0" persistency="666" server="server1" type="Python">
      <core>
	import VR
	
	#def fabForward():
		

	print 'simStuff'
	
	# get end effectors and targets
	skeleton = VR.character.getSkeleton()
	endEffectors = skeleton.getEndEffectors()
	
	
	for name, ee in endEffectors.items():
		skeleton.applyFABRIK(name)
	#skeleton.applyFABRIK('handLeft')
	#skeleton.applyFABRIK('handRight')
	#skeleton.applyFABRIK('head')
	
	skeleton.resolveSystem('back')
	skeleton.resolveSystem('abdomen')
	
	
	for name, ee in endEffectors.items():
		#chain = skeleton.getChain(name)
		#print name, chain[-1]
		pass
		
</core>
    </Script>
    <Script base_name="testMove" group="no group" name_space="__script__" name_suffix="0" persistency="666" server="server1" type="Python">
      <core>
	import VR
	from VR.Math import Vec3
	from math import sin, cos
	
	
	#VR.character.move('handLeft', VR.Pose([-0.2,1.05,0], [0,-1,0], [0,0,-1])) # origin
	#VR.character.move('handLeft', VR.Pose([-0.2,1.35,-0.2], [0,-1,0], [0,0,-1])) # forward
	
	#VR.character.move('handLeft', VR.Pose([-0.2,1.1,0.25], [0,-1,0], [0,0,-1])) # backward
	#VR.character.move('handLeft', VR.Pose([-0.2,1.0,0.35], [0,-1,0], [0,0,-1])) # backward
	#return
	
	def cb2(t):
		z = 0.25
		p = VR.Pose([-0.2,1.1,-z+t*2*z], [0,-1,0], [0,0,-1])
		VR.character.move('handLeft', p)
		
	def cb1(t):
		a = t*2*3.14 * 4
		R = 0.3
		p = Vec3([-0.3,1.5,-0.3]) + Vec3([cos(a)*R,sin(a)*R,0])
		VR.character.move('handLeft', VR.Pose(p))
	
	a = VR.Animation('movement')
	a.setCallback(cb1)
	#a.setCallback(cb2)
	a.setDuration(16)
	a.start()
</core>
      <trig type="on_device" dev="keyboard" state="Pressed" param="" key="32" base_name="trigger" name_space="__global__" name_suffix="1" persistency="666"/>
    </Script>
  </Scripts>
  <Sockets persistency="666"/>
  <Background color="0.6 0.6 0.6" format=".png" path="" persistency="666" type="0"/>
  <Navigation active="Orbit" persistency="666"/>
  <Materials persistency="666"/>
  <Semantics persistency="666"/>
</Scene>
