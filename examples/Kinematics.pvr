<?xml version="1.0" encoding="UTF-8"?>
<Scene base_name="Physics" name_space="Scene" name_suffix="0" persistency="666">
  <Objects>
    <Object base_name="Root" name_space="__global__" name_suffix="0" persistency="666" pickable="0" type="Object" visible="1">
      <Object ambient="0.3 0.3 0.3 1" base_name="Headlight" beacon="Headlight_beacon" diffuse="1 1 1 1" lightType="point" name_space="__global__" name_suffix="0" on="1" persistency="666" photometricMap="" pickable="0" shadow="0" shadowColor="0.1 0.1 0.1 1" shadowMapRes="2048" specular="0.1 0.1 0.1 1" type="Light" visible="1">
        <Object accept_root="1" aspect="1" at="-0.0150324 -0.0264561 0.49" at_dir="0" base_name="Default" far="250" fov="1.0472" from="3.73028 1.61072 1.54313" name_space="__global__" name_suffix="0" near="0.1" orthoSize="100" persistency="666" pickable="0" scale="1 1 1" type="Camera" up="0 1 0" visible="1">
          <Object at="0 0 -1" at_dir="0" base_name="Headlight_beacon" from="0 0 0" light="Headlight" name_space="__global__" name_suffix="0" persistency="666" pickable="0" scale="1 1 1" type="LightBeacon" up="0 1 0" visible="1">
            <constraint persistency="666"/>
          </Object>
          <constraint persistency="666"/>
        </Object>
      </Object>
    </Object>
  </Objects>
  <Rendering deferred_rendering="0" frustum_culling="1" fxaa="0" hmdd="0" marker="0" occlusion_culling="0" persistency="666" ssao="0" ssao_kernel="4" ssao_noise="4" ssao_radius="0.02" two_sided="1"/>
  <Scripts persistency="666">
    <Script base_name="Init" group="no group" name_space="__script__" name_suffix="0" persistency="666" server="server1" type="Python">
      <core>
	import VR
	
	if hasattr(VR, 'pendel'): VR.pendel.destroy()
	VR.pendel = VR.Object('pendel', 'Headlight')
	pendel = VR.pendel
	
	a = VR.Geometry("anchor")
	z1 = VR.Geometry('z1')
	z2 = VR.Geometry('z2')
	z3 = VR.Geometry('z3')
	s = VR.Geometry('s')
	
	a.setPrimitive('Box 1 0.1 1 1 1 1')
	z1.setPrimitive('Cylinder 0.4 0.03 16 1 1 1')
	z2.setPrimitive('Cylinder 0.4 0.03 16 1 1 1')
	z3.setPrimitive('Cylinder 0.4 0.03 16 1 1 1')
	s.setPrimitive('Cone 0.2 0.2 64 1 1')
	
	a.translate([0,1.35,0])
	z1.translate([0,1.1,0])
	z2.translate([0,0.7,0])
	z3.translate([0,0.3,0])
	
	for o in [a,z1,z2,z3,s]: o.setPickable(True)
	
	s.translate([0,-0.1,0])
	s.applyTransformation(s.getPose())
	s.translate([0,0.2,0])
	
	pendel.addChild(a)
	pendel.addChild(z1)
	pendel.addChild(z2)
	pendel.addChild(z3)
	pendel.addChild(s)
	
	def setupJoint(a,b,d1,d2):
		c = VR.Constraint()
		c.free([3,4,5])
		c.setOffsetA( VR.Pose([0,-d1,0], [0,0,-1], [0,1,0]) )
		c.setOffsetB( VR.Pose([0, d2,0], [0,0,-1], [0,1,0]) )
		cs = VR.Constraint()
		a.attach(b, c, cs)
	
	setupJoint(a, z1, 0.05, 0.2)
	setupJoint(z1, z2, 0.2, 0.2)
	setupJoint(z2, z3, 0.2, 0.2)
	setupJoint(z3, s, 0.2, 0.0)
	
	
	
	
	
</core>
      <trig type="on_scene_load" dev="" state="Pressed" param="" key="0" base_name="trigger" name_space="__global__" name_suffix="0" persistency="666"/>
    </Script>
    <Script base_name="InitHinge" group="no group" name_space="__script__" name_suffix="0" persistency="666" server="server1" type="Python">
      <core>
	import VR
	
	if hasattr(VR, 'hinge'): VR.hinge.destroy()
	VR.hinge = VR.Object('hinge', 'Headlight')
	
	def addPrimitive(name, params, pose):
		g = VR.Geometry(name)
		g.setPrimitive(params)
		g.setPose(pose)
		g.setPickable(True)
		VR.hinge.addChild(g)
		return g
		
	A = addPrimitive('A', 'Box 0.4 0.1 0.02 1 1 1', VR.Pose([0,0,0.5],[0,0,-1],[0,1,0]))
	B = addPrimitive('B', 'Box 0.4 0.1 0.02 1 1 1', VR.Pose([0.05,0.1,0.52],[0,0,-1],[1,1,0]))
	
	c = VR.Constraint()
	c.free([5])
	c.setOffsetA( VR.Pose([-0.2,0,0], [0,0,-1], [0,1,0]) )
	c.setOffsetB( VR.Pose([-0.2,0,0.02], [0,0,-1], [0,1,0]) )
	cs = VR.Constraint()
	A.attach(B, c, cs)
</core>
      <trig type="on_scene_load" dev="" state="Pressed" param="" key="0" base_name="trigger" name_space="__global__" name_suffix="1" persistency="666"/>
    </Script>
    <Script base_name="test" group="no group" name_space="__script__" name_suffix="0" persistency="666" server="server1" type="Python">
      <core>
	import VR
	
	a = VR.find('anchor')
	a.getConstraint()
</core>
    </Script>
  </Scripts>
  <Sockets persistency="666"/>
  <Background color="0.6 0.6 0.6" format=".png" path="" persistency="666" type="0"/>
  <Navigation active="Orbit" persistency="666"/>
  <Materials persistency="666"/>
  <Semantics persistency="666"/>
</Scene>
